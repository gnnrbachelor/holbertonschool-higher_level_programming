Test for ``matrix_divided`` module
=========================

Using ``matrix_divided``
------------------------

Import module
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check for module docstring
	>>> mod = __import__("2-matrix_divided").__doc__
	>>> len(mod) > 1
	True

Check for function docstring
	>>> func = __import__("2-matrix_divided").__doc__
	>>> len(func) > 1
	True

Check with normal numbers
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check with list containing chars
	>>> matrix = [[1, 2, 3], ["a", "b", "c"]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check with rows of different lengths
	>>> matrix = [[1, 2, 3, 4], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Check with string divisor
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, "holberton"))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Check with zero division
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Check for division with infinity
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, float(inf))

Check for one argument
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix)
	[[1, 2, 3], [4, 5, 6]]

